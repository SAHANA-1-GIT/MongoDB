  MongoDb-Assignment-1

1.db.movies.insert({"title":"Flight Club",
... ... "writer":"Chucck Palahniuko",
... ... "year":1999,
... ... actor:[
... ...   "Brad Pitt",
... ...   "Edward Norton"
... ... ]})
WriteResult({ "nInserted" : 1 })

2.db.movies.insert({"title":"Pulp Fiction",
... ... "writer":"Quentin Tarantino",
... ... "year":1994,
... ... actor:[
... ...   "John Travolta",
... ...   "Uma Thurman"
... ... ]})
WriteResult({ "nInserted" : 1 })

3.db.movies.insert({"title":"Inglorius Basterds",
... ... "writer":"Quentin Tarantino",
... ... "year":2009,
... ... actor:[
... ...   "Brad Pitt",
... ...   "Diane Kruger",
... ...    "Eli Roth"
... ... ]})
WriteResult({ "nInserted" : 1 })

4.db.movies.insert({"title":"The Hobbit:An Unexpected Journey",
... ... "writer":"J.R.R. Tolkein",
... ... "year":2012,
... ... "franchise":"The Hobbit"
... ... })
WriteResult({ "nInserted" : 1 })

5.db.movies.insert({"title":"The Hobbit:The Desolation of Smaug",
... "writer":"J.R.R. Tolkein",
... "year":2013,
... "franchise":"The Hobbit"
... })

WriteResult({ "nInserted" : 1 })

6.db.movies.insert({"title":"The Hobbit:The Battle of yhe Five Armies",
... ... "writer":"J.R.R. Tolkein",
... ... "year":2012,
... ... "franchise":"The Hobbit",
...  "synopsis":"Bilbo ana Company are forced to engage in a war against an array of cobatants and keep the Lonely Mountain from falling into the hands of a rising darkness."
...  })
WriteResult({ "nInserted" : 1 })

7.db.movies.insert({"title":"Pee Wee Hrman's Big Adventure"})
WriteResult({ "nInserted" : 1 })


8.db.movies.insert({"title":"Avatar"})
WriteResult({ "nInserted" : 1 })



1.db.movies.find()
{ "_id" : ObjectId("60770b292877f9c24762e94f"), "title" : "Flight Club", "writer" : "Chucck Palahniuko", "year" : 1999, "actor" : [ "Brad Pitt", "Edward Norton" ] }
{ "_id" : ObjectId("60770d062877f9c24762e950"), "title" : "Pulp Fiction", "writer" : "Quentin Tarantino", "year" : 1994, "actor" : [ "John Travolta", "Uma Thurman" ] }
{ "_id" : ObjectId("60770d812877f9c24762e951"), "title" : "Inglorius Basterds", "writer" : "Quentin Tarantino", "year" : 2009, "actor" : [ "Brad Pitt", "Diane Kruger", "Eli Roth" ] }
{ "_id" : ObjectId("607711ce2877f9c24762e953"), "title" : "The Hobbit:An Unexpected Journey", "writer" : "J.R.R. Tolkein", "year" : 2012, "franchise" : "The Hobbit" }
{ "_id" : ObjectId("607711e22877f9c24762e954"), "title" : "The Hobbit:The Desolation of Smaug", "writer" : "J.R.R. Tolkein", "year" : 2013, "franchise" : "The Hobbit" }
{ "_id" : ObjectId("6077139a2877f9c24762e955"), "title" : "The Hobbit:The Battle of yhe Five Armies", "writer" : "J.R.R. Tolkein", "year" : 2012, "franchise" : "The Hobbit", "synopsis" : "Bilbo ana Company are forced to engage in a war against an array of cobatants and keep the Lonely Mountain from falling into the hands of a rising darkness." }
{ "_id" : ObjectId("607713e22877f9c24762e956"), "title" : "Pee Wee Hrman's Big Adventure" }
{ "_id" : ObjectId("607714052877f9c24762e957"), "title" : "Avatar" }



2.db.movies.find({"writer":"Quentin Tarantino"})
{ "_id" : ObjectId("60770d062877f9c24762e950"), "title" : "Pulp Fiction", "writer" : "Quentin Tarantino", "year" : 1994, "actor" : [ "John Travolta", "Uma Thurman" ] }
{ "_id" : ObjectId("60770d812877f9c24762e951"), "title" : "Inglorius Basterds", "writer" : "Quentin Tarantino", "year" : 2009, "actor" : [ "Brad Pitt", "Diane Kruger", "Eli Roth" ] }


3.db.movies.find({"actor":"Brad Pitt"})
{ "_id" : ObjectId("60770b292877f9c24762e94f"), "title" : "Flight Club", "writer" : "Chucck Palahniuko", "year" : 1999, "actor" : [ "Brad Pitt", "Edward Norton" ] }
{ "_id" : ObjectId("60770d812877f9c24762e951"), "title" : "Inglorius Basterds", "writer" : "Quentin Tarantino", "year" : 2009, "actor" : [ "Brad Pitt", "Diane Kruger", "Eli Roth" ] }


4.db.movies.find({"franchise":"The Hobbit"})
{ "_id" : ObjectId("607711ce2877f9c24762e953"), "title" : "The Hobbit:An Unexpected Journey", "writer" : "J.R.R. Tolkein", "year" : 2012, "franchise" : "The Hobbit" }
{ "_id" : ObjectId("607711e22877f9c24762e954"), "title" : "The Hobbit:The Desolation of Smaug", "writer" : "J.R.R. Tolkein", "year" : 2013, "franchise" : "The Hobbit" }
{ "_id" : ObjectId("6077139a2877f9c24762e955"), "title" : "The Hobbit:The Battle of yhe Five Armies", "writer" : "J.R.R. Tolkein", "year" : 2012, "franchise" : "The Hobbit", "synopsis" : "Bilbo ana Company are forced to engage in a war against an array of cobatants and keep the Lonely Mountain from falling into the hands of a rising darkness." }

5.db.movies.find( { year: { $gt:1990, $lt:2000 } } ).pretty()
{
        "_id" : ObjectId("60770b292877f9c24762e94f"),
        "title" : "Flight Club",
        "writer" : "Chucck Palahniuko",
        "year" : 1999,
        "actor" : [
                "Brad Pitt",
                "Edward Norton"
        ]
}
{
        "_id" : ObjectId("60770d062877f9c24762e950"),
        "title" : "Pulp Fiction",
        "writer" : "Quentin Tarantino",
        "year" : 1994,
        "actor" : [
                "John Travolta",
                "Uma Thurman"
        ]
}


6.db.movies.find({$or : [{year:{$lt:2000}},{year:{$gt:2010}}]}).pretty()
{
        "_id" : ObjectId("60770b292877f9c24762e94f"),
        "title" : "Flight Club",
        "writer" : "Chucck Palahniuko",
        "year" : 1999,
        "actor" : [
                "Brad Pitt",
                "Edward Norton"
        ]
}
{
        "_id" : ObjectId("60770d062877f9c24762e950"),
        "title" : "Pulp Fiction",
        "writer" : "Quentin Tarantino",
        "year" : 1994,
        "actor" : "Samuel L Jackson"
}
{
        "_id" : ObjectId("607711ce2877f9c24762e953"),
        "title" : "The Hobbit:An Unexpected Journey",
        "writer" : "J.R.R. Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit",
        "synopsis" : "A reluctant hobbit,Bilbo Bagginsdets out to the lonely mountain with a spirited group of dwarves to reclaim their mountain home - and the gold with in it from the dragon smaug"
}
{
        "_id" : ObjectId("607711e22877f9c24762e954"),
        "title" : "The Hobbit:The Desolation of Smaug",
        "writer" : "J.R.R. Tolkein",
        "year" : 2013,
        "franchise" : "The Hobbit",
        "synopsis" : "The dwarves,along with Biblbo Baggins and Gandalf the Grey,continue their quest to reclsim Erebor,their homeland,from smaug.Bilbo Baggins in possesion of a mystrious and magical ring"
}
{
        "_id" : ObjectId("6077139a2877f9c24762e955"),
        "title" : "The Hobbit:The Battle of yhe Five Armies",
        "writer" : "J.R.R. Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit",
        "synopsis" : "Bilbo ana Company are forced to engage in a war against an array of cobatants and keep the Lonely Mountain from falling into the hands of a rising darkness."
}
{
        "_id" : ObjectId("6077c27456003a342fb69cc2"),
        "title" : "Flight Club",
        "writer" : "Chucck Palahniuko",
        "year" : 1999,
        "actor" : [
                "Brad Pitt",
                "Edward Norton"
        ]
}


1.db.movies.update({"title":"The Hobbit:An Unexpected Journey"},
{$set:{"synopsis":"A reluctant hobbit,Bilbo Bagginsdets out to the lonely mountain with a spirited group of dwarves to reclaim their mountain home - and the gold with in it from the dragon smaug"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

2.db.movies.update({"title":"The Hobbit:The Desolation of Smaug"},
{$set:{"synopsis":"The dwarves,along with Biblbo Baggins and Gandalf the Grey,continue their quest to reclsim Erebor,their homeland,from smaug.Bilbo Baggins in possesion of a mystrious and magical ring"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

3.db.movies.update({"title":"Pulp Fiction"},
{$set:{"actor":"Samuel L Jackson"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })


1.db.movies.createIndex({synopsis:"text"})

1.db.movies.find(
... {$text:
... {$search:"Bilbo"}}).pretty()

2.db.movies.find(
... {$text:
... {$search:"Gandalf"}}).pretty()

3.db.movies.find(
... {$text:
... {$search:"Bilbo -Gandalf"}}).pretty()

4.db.movies.find(
... {$text:
... {$search:"dwarves hobbit"}}).pretty()

5.db.movies.find(
{$text:
{$And: [{$search:"gold"},
       {$search:"dragon"}]}}).pretty()

1.db.movies.remove({'title':"Avatar"})

2.db.movies.remove({'title':"Pee Wee Herman's Big Adventure"})




1.db.users.insert({"username":"GoodGuyGreg","first_name":"Good Guy","last_name":"Greg"})
WriteResult({ "nInserted" : 1 })

2.db.users.insert({"username":"ScumbagSteve","full_name":[{"first_name":"Scumbag","last_name":"Steve"}]})
WriteResult({ "nInserted" : 1 })

1.db.posts.insert({"username":"GoodGuyGreg","title":"Passes out at Party","body":"Wakes up early and clean house"})
WriteResult({ "nInserted" : 1 })

2.db.posts.insert({"username":"GoodGuyGreg","title":"Steals your identity","body":"Raises your credit score"})
WriteResult({ "nInserted" : 1 })

3.db.posts.insert({"username":"GoodGuyGreg","title":"Reports bug in your code","body":"Sends you a Pull Request"})
WriteResult({ "nInserted" : 1 })

4.db.posts.insert({"username":"ScumbagSteve","title":"Borrow something","body":"Sells it"})
WriteResult({ "nInserted" : 1 })

5.db.posts.insert({"username":"ScumbagSteve","title":"Borrow everything","body":"The end"})
WriteResult({ "nInserted" : 1 })

6.db.posts.insert({"username":"ScumbagSteve","title":"Forks your repo on github","body":"Sets to private"})
WriteResult({ "nInserted" : 1 })


1.db.comments1.insert(
... {
... username:"GoodGuyGreg",
... comment:"Hope you got a good deal",
... post:ObjectId("6077a5cc2877f9c24762e95d")})
WriteResult({ "nInserted" : 1 })



2.db.comments1.insert(
... {
... username:"GoodGuyGreg",
... comment:"What is mine is yours!",
... post:ObjectId("6077a5ee2877f9c24762e95e")})
WriteResult({ "nInserted" : 1 })



3.db.comments1.insert(
... {
... username:"GoodGuyGreg",
... comment:"Don't violate the licensing agrrement!",
... post:ObjectId("6077a6472877f9c24762e95f")})
WriteResult({ "nInserted" : 1 })


4.db.comments1.insert(
... {
... username:"ScumbagSteve",
... comment:"it still isn't clean",
... post:ObjectId("6077a4ff2877f9c24762e95a")})
WriteResult({ "nInserted" : 1 })


5.db.comments1.insert(
... {
... username:"ScumbagSteve",
... comment:"Denied your PR cause i found a hack",
... post:ObjectId("6077a57d2877f9c24762e95c")})
WriteResult({ "nInserted" : 1 })



1.db.users.find()

2.db.posts.find()

3.db.posts.find({username:"ScumbagSteve"})

4.db.posts.find({username:"GoodGuyGreg"})

5.db.comments1.find()

6.db.comments1.find({username:"ScumbagSteve"})

7.db.comments1.find({username:"GoodGuyGreg"})

8.db.posts.find({title:"Reports bug in your code"})



 



